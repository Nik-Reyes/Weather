{"version":3,"file":"bundle.js","mappings":"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tB,KAAKywB,SAASlD,cACtB,CACA,aAAIC,GACH,OAAOxtB,KAAKywB,SAASjD,SACtB,CACA,gBAAIC,GACH,OAAOztB,KAAKywB,SAAShD,YACtB,CACA,QAAImD,GACH,OAAO5wB,KAAKywB,SAASG,IACtB,CACA,aAAInH,GACH,OAAOzpB,KAAKywB,SAAShH,SACtB,CACA,wBAAIwE,GACH,OAAOjuB,KAAKywB,SAASxC,oBACtB,CACA,yBAAIM,GACH,OAAOvuB,KAAKywB,SAASlC,qBACtB,CACA,aAAIJ,GACH,OAAOnuB,KAAKywB,SAAStC,SACtB,CACA,sBAAIvC,GACH,OAAO5rB,KAAKywB,SAAS7E,kBACtB,CACA,sBAAId,GACH,OAAO9qB,KAAKywB,SAAS3F,kBACtB,CACA,qBAAIT,GACH,OAAOrqB,KAAKywB,SAASpG,iBACtB,CACA,8BAAIQ,GACH,OAAO7qB,KAAKywB,SAAS5F,0BACtB,CACA,qBAAIX,GACH,OAAOlqB,KAAKywB,SAASvG,iBACtB,CACA,wBAAI0C,GACH,OAAO5sB,KAAKywB,SAAS7D,oBACtB,CACA,sBAAIC,GACH,OAAO7sB,KAAKywB,SAAS5D,kBACtB,CAEA,mBAAI8B,GACH,OAAO3uB,KAAKywB,SAAS9B,eACtB,CACA,yBAAID,GACH,OAAO1uB,KAAKywB,SAAS/B,qBACtB,CACA,iBAAI4B,GACH,OAAOtwB,KAAKywB,SAASH,aACtB,CACA,mBAAIlE,GACH,OAAOpsB,KAAKywB,SAASrE,eACtB,CACA,eAAIiE,GACH,OAAOrwB,KAAKywB,SAASJ,WACtB,CACA,mBAAIJ,GACH,OAAOjwB,KAAKywB,SAASR,eACtB,CACA,qBAAIH,GACH,OAAO9vB,KAAKywB,SAASX,iBACtB,ECxOc,MAAMoB,GACpB,WAAAzjB,GACCzN,KAAKmxB,iBAAmBnxB,KAAKoxB,SAAS,IAAMpxB,KAAKqxB,kBACjDrxB,KAAKsxB,eAAiB,KACtBtxB,KAAKsE,SAAW,IACjB,CAEA,mBAAIitB,GACH,OAAOvxB,KAAKmxB,gBACb,CAEA,iBAAIK,GACH,OAAOxxB,KA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","sources":["webpack://basic-webpack-template/webpack/runtime/create fake namespace object","webpack://basic-webpack-template/webpack/runtime/load script","webpack://basic-webpack-template/./src/assets/svgs/weatherIcons/ lazy ^\\.\\/.*\\.svg$ namespace object","webpack://basic-webpack-template/webpack/bootstrap","webpack://basic-webpack-template/webpack/runtime/define property getters","webpack://basic-webpack-template/webpack/runtime/ensure chunk","webpack://basic-webpack-template/webpack/runtime/get javascript chunk filename","webpack://basic-webpack-template/webpack/runtime/get mini-css chunk filename","webpack://basic-webpack-template/webpack/runtime/global","webpack://basic-webpack-template/webpack/runtime/hasOwnProperty shorthand","webpack://basic-webpack-template/webpack/runtime/make namespace object","webpack://basic-webpack-template/webpack/runtime/publicPath","webpack://basic-webpack-template/webpack/runtime/jsonp chunk loading","webpack://basic-webpack-template/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/en-US.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://basic-webpack-template/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://basic-webpack-template/./node_modules/date-fns/_lib/defaultOptions.js","webpack://basic-webpack-template/./node_modules/date-fns/constants.js","webpack://basic-webpack-template/./node_modules/date-fns/constructFrom.js","webpack://basic-webpack-template/./node_modules/date-fns/toDate.js","webpack://basic-webpack-template/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://basic-webpack-template/./node_modules/date-fns/startOfDay.js","webpack://basic-webpack-template/./node_modules/date-fns/getDayOfYear.js","webpack://basic-webpack-template/./node_modules/date-fns/differenceInCalendarDays.js","webpack://basic-webpack-template/./node_modules/date-fns/_lib/normalizeDates.js","webpack://basic-webpack-template/./node_modules/date-fns/startOfYear.js","webpack://basic-webpack-template/./node_modules/date-fns/startOfWeek.js","webpack://basic-webpack-template/./node_modules/date-fns/startOfISOWeek.js","webpack://basic-webpack-template/./node_modules/date-fns/getISOWeekYear.js","webpack://basic-webpack-template/./node_modules/date-fns/getISOWeek.js","webpack://basic-webpack-template/./node_modules/date-fns/startOfISOWeekYear.js","webpack://basic-webpack-template/./node_modules/date-fns/getWeekYear.js","webpack://basic-webpack-template/./node_modules/date-fns/getWeek.js","webpack://basic-webpack-template/./node_modules/date-fns/startOfWeekYear.js","webpack://basic-webpack-template/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://basic-webpack-template/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://basic-webpack-template/./node_modules/date-fns/_lib/format/formatters.js","webpack://basic-webpack-template/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://basic-webpack-template/./node_modules/date-fns/_lib/protectedTokens.js","webpack://basic-webpack-template/./node_modules/date-fns/isValid.js","webpack://basic-webpack-template/./node_modules/date-fns/isDate.js","webpack://basic-webpack-template/./node_modules/date-fns/format.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/_lib/tzIntlTimeZoneName/index.js","webpack://basic-webpack-template/./node_modules/date-fns/getDefaultOptions.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/_lib/tzTokenizeDate/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/_lib/newDateUTC/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/_lib/tzParseTimezone/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/format/formatters/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/_lib/tzPattern/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/toDate/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/format/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/formatInTimeZone/index.js","webpack://basic-webpack-template/./node_modules/date-fns-tz/dist/esm/toZonedTime/index.js","webpack://basic-webpack-template/./src/modules/WeatherDataService.js","webpack://basic-webpack-template/./src/modules/TimeKeeper.js","webpack://basic-webpack-template/./src/modules/CarouselHandler.js","webpack://basic-webpack-template/./src/modules/NationalWeatherService.js","webpack://basic-webpack-template/./node_modules/date-fns/parseISO.js","webpack://basic-webpack-template/./src/modules/DomManager.js","webpack://basic-webpack-template/./src/modules/DomElementKeeper.js","webpack://basic-webpack-template/./src/modules/OpenCage.js","webpack://basic-webpack-template/./src/modules/Seachbar.js","webpack://basic-webpack-template/./src/main.js"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"basic-webpack-template:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var map = {\n\t\"./clear-day.svg\": [\n\t\t387,\n\t\t387\n\t],\n\t\"./clear-night.svg\": [\n\t\t183,\n\t\t183\n\t],\n\t\"./cloudy.svg\": [\n\t\t251,\n\t\t251\n\t],\n\t\"./fog.svg\": [\n\t\t241,\n\t\t241\n\t],\n\t\"./partly-cloudy-day.svg\": [\n\t\t323,\n\t\t323\n\t],\n\t\"./partly-cloudy-night.svg\": [\n\t\t655,\n\t\t655\n\t],\n\t\"./rain.svg\": [\n\t\t333,\n\t\t333\n\t],\n\t\"./showers-day.svg\": [\n\t\t965,\n\t\t965\n\t],\n\t\"./showers-night.svg\": [\n\t\t961,\n\t\t961\n\t],\n\t\"./snow-showers-day.svg\": [\n\t\t714,\n\t\t714\n\t],\n\t\"./snow-showers-night.svg\": [\n\t\t233,\n\t\t233\n\t],\n\t\"./snow.svg\": [\n\t\t26,\n\t\t26\n\t],\n\t\"./thunder-rain.svg\": [\n\t\t370,\n\t\t370\n\t],\n\t\"./thunder-showers-day.svg\": [\n\t\t16,\n\t\t16\n\t],\n\t\"./thunder-showers-night.svg\": [\n\t\t956,\n\t\t956\n\t],\n\t\"./wind.svg\": [\n\t\t681,\n\t\t681\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 425;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbasic_webpack_template\"] = self[\"webpackChunkbasic_webpack_template\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { getDefaultOptions } from 'date-fns';\n/**\n * Returns the formatted time zone name of the provided `timeZone` or the current\n * system time zone if omitted, accounting for DST according to the UTC value of\n * the date.\n */\nexport function tzIntlTimeZoneName(length, date, options) {\n    const defaultOptions = getDefaultOptions();\n    const dtf = getDTF(length, options.timeZone, options.locale ?? defaultOptions.locale);\n    return 'formatToParts' in dtf ? partsTimeZone(dtf, date) : hackyTimeZone(dtf, date);\n}\nfunction partsTimeZone(dtf, date) {\n    const formatted = dtf.formatToParts(date);\n    for (let i = formatted.length - 1; i >= 0; --i) {\n        if (formatted[i].type === 'timeZoneName') {\n            return formatted[i].value;\n        }\n    }\n    return undefined;\n}\nfunction hackyTimeZone(dtf, date) {\n    const formatted = dtf.format(date).replace(/\\u200E/g, '');\n    const tzNameMatch = / [\\w-+ ]+$/.exec(formatted);\n    return tzNameMatch ? tzNameMatch[0].substr(1) : '';\n}\n// If a locale has been provided `en-US` is used as a fallback in case it is an\n// invalid locale, otherwise the locale is left undefined to use the system locale.\nfunction getDTF(length, timeZone, locale) {\n    return new Intl.DateTimeFormat(locale ? [locale.code, 'en-US'] : undefined, {\n        timeZone: timeZone,\n        timeZoneName: length,\n    });\n}\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","/**\n * Returns the [year, month, day, hour, minute, seconds] tokens of the provided\n * `date` as it will be rendered in the `timeZone`.\n */\nexport function tzTokenizeDate(date, timeZone) {\n    const dtf = getDateTimeFormat(timeZone);\n    return 'formatToParts' in dtf ? partsOffset(dtf, date) : hackyOffset(dtf, date);\n}\nconst typeToPos = {\n    year: 0,\n    month: 1,\n    day: 2,\n    hour: 3,\n    minute: 4,\n    second: 5,\n};\nfunction partsOffset(dtf, date) {\n    try {\n        const formatted = dtf.formatToParts(date);\n        const filled = [];\n        for (let i = 0; i < formatted.length; i++) {\n            const pos = typeToPos[formatted[i].type];\n            if (pos !== undefined) {\n                filled[pos] = parseInt(formatted[i].value, 10);\n            }\n        }\n        return filled;\n    }\n    catch (error) {\n        if (error instanceof RangeError) {\n            return [NaN];\n        }\n        throw error;\n    }\n}\nfunction hackyOffset(dtf, date) {\n    const formatted = dtf.format(date);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted);\n    // const [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed\n    // return [fYear, fMonth, fDay, fHour, fMinute, fSecond]\n    return [\n        parseInt(parsed[3], 10),\n        parseInt(parsed[1], 10),\n        parseInt(parsed[2], 10),\n        parseInt(parsed[4], 10),\n        parseInt(parsed[5], 10),\n        parseInt(parsed[6], 10),\n    ];\n}\n// Get a cached Intl.DateTimeFormat instance for the IANA `timeZone`. This can be used\n// to get deterministic local date/time output according to the `en-US` locale which\n// can be used to extract local time parts as necessary.\nconst dtfCache = {};\n// New browsers use `hourCycle`, IE and Chrome <73 does not support it and uses `hour12`\nconst testDateFormatted = new Intl.DateTimeFormat('en-US', {\n    hourCycle: 'h23',\n    timeZone: 'America/New_York',\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n}).format(new Date('2014-06-25T04:00:00.123Z'));\nconst hourCycleSupported = testDateFormatted === '06/25/2014, 00:00:00' ||\n    testDateFormatted === '‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00';\nfunction getDateTimeFormat(timeZone) {\n    if (!dtfCache[timeZone]) {\n        dtfCache[timeZone] = hourCycleSupported\n            ? new Intl.DateTimeFormat('en-US', {\n                hourCycle: 'h23',\n                timeZone: timeZone,\n                year: 'numeric',\n                month: 'numeric',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            })\n            : new Intl.DateTimeFormat('en-US', {\n                hour12: false,\n                timeZone: timeZone,\n                year: 'numeric',\n                month: 'numeric',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n    }\n    return dtfCache[timeZone];\n}\n","/**\n * Use instead of `new Date(Date.UTC(...))` to support years below 100 which doesn't work\n * otherwise due to the nature of the\n * [`Date` constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#interpretation_of_two-digit_years.\n *\n * For `Date.UTC(...)`, use `newDateUTC(...).getTime()`.\n */\nexport function newDateUTC(fullYear, month, day, hour, minute, second, millisecond) {\n    const utcDate = new Date(0);\n    utcDate.setUTCFullYear(fullYear, month, day);\n    utcDate.setUTCHours(hour, minute, second, millisecond);\n    return utcDate;\n}\n","import { tzTokenizeDate } from '../tzTokenizeDate/index.js';\nimport { newDateUTC } from '../newDateUTC/index.js';\nconst MILLISECONDS_IN_HOUR = 3600000;\nconst MILLISECONDS_IN_MINUTE = 60000;\nconst patterns = {\n    timezone: /([Z+-].*)$/,\n    timezoneZ: /^(Z)$/,\n    timezoneHH: /^([+-]\\d{2})$/,\n    timezoneHHMM: /^([+-])(\\d{2}):?(\\d{2})$/,\n};\n// Parse constious time zone offset formats to an offset in milliseconds\nexport function tzParseTimezone(timezoneString, date, isUtcDate) {\n    // Empty string\n    if (!timezoneString) {\n        return 0;\n    }\n    // Z\n    let token = patterns.timezoneZ.exec(timezoneString);\n    if (token) {\n        return 0;\n    }\n    let hours;\n    let absoluteOffset;\n    // ±hh\n    token = patterns.timezoneHH.exec(timezoneString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        if (!validateTimezone(hours)) {\n            return NaN;\n        }\n        return -(hours * MILLISECONDS_IN_HOUR);\n    }\n    // ±hh:mm or ±hhmm\n    token = patterns.timezoneHHMM.exec(timezoneString);\n    if (token) {\n        hours = parseInt(token[2], 10);\n        const minutes = parseInt(token[3], 10);\n        if (!validateTimezone(hours, minutes)) {\n            return NaN;\n        }\n        absoluteOffset = Math.abs(hours) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n        return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n    }\n    // IANA time zone\n    if (isValidTimezoneIANAString(timezoneString)) {\n        date = new Date(date || Date.now());\n        const utcDate = isUtcDate ? date : toUtcDate(date);\n        const offset = calcOffset(utcDate, timezoneString);\n        const fixedOffset = isUtcDate ? offset : fixOffset(date, offset, timezoneString);\n        return -fixedOffset;\n    }\n    return NaN;\n}\nfunction toUtcDate(date) {\n    return newDateUTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n}\nfunction calcOffset(date, timezoneString) {\n    const tokens = tzTokenizeDate(date, timezoneString);\n    // ms dropped because it's not provided by tzTokenizeDate\n    const asUTC = newDateUTC(tokens[0], tokens[1] - 1, tokens[2], tokens[3] % 24, tokens[4], tokens[5], 0).getTime();\n    let asTS = date.getTime();\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return asUTC - asTS;\n}\nfunction fixOffset(date, offset, timezoneString) {\n    const localTS = date.getTime();\n    // Our UTC time is just a guess because our offset is just a guess\n    let utcGuess = localTS - offset;\n    // Test whether the zone matches the offset for this ts\n    const o2 = calcOffset(new Date(utcGuess), timezoneString);\n    // If so, offset didn't change, and we're done\n    if (offset === o2) {\n        return offset;\n    }\n    // If not, change the ts by the difference in the offset\n    utcGuess -= o2 - offset;\n    // If that gives us the local time we want, we're done\n    const o3 = calcOffset(new Date(utcGuess), timezoneString);\n    if (o2 === o3) {\n        return o2;\n    }\n    // If it's different, we're in a hole time. The offset has changed, but we don't adjust the time\n    return Math.max(o2, o3);\n}\nfunction validateTimezone(hours, minutes) {\n    return -23 <= hours && hours <= 23 && (minutes == null || (0 <= minutes && minutes <= 59));\n}\nconst validIANATimezoneCache = {};\nfunction isValidTimezoneIANAString(timeZoneString) {\n    if (validIANATimezoneCache[timeZoneString])\n        return true;\n    try {\n        new Intl.DateTimeFormat(undefined, { timeZone: timeZoneString });\n        validIANATimezoneCache[timeZoneString] = true;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n","import { tzIntlTimeZoneName } from '../../_lib/tzIntlTimeZoneName/index.js';\nimport { tzParseTimezone } from '../../_lib/tzParseTimezone/index.js';\nconst MILLISECONDS_IN_MINUTE = 60 * 1000;\nexport const formatters = {\n    // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n    X: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        if (timezoneOffset === 0) {\n            return 'Z';\n        }\n        switch (token) {\n            // Hours and optional minutes\n            case 'X':\n                return formatTimezoneWithOptionalMinutes(timezoneOffset);\n            // Hours, minutes and optional seconds without `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `XX`\n            case 'XXXX':\n            case 'XX': // Hours and minutes without `:` delimeter\n                return formatTimezone(timezoneOffset);\n            // Hours, minutes and optional seconds with `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `XXX`\n            case 'XXXXX':\n            case 'XXX': // Hours and minutes with `:` delimeter\n            default:\n                return formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n    x: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        switch (token) {\n            // Hours and optional minutes\n            case 'x':\n                return formatTimezoneWithOptionalMinutes(timezoneOffset);\n            // Hours, minutes and optional seconds without `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `xx`\n            case 'xxxx':\n            case 'xx': // Hours and minutes without `:` delimeter\n                return formatTimezone(timezoneOffset);\n            // Hours, minutes and optional seconds with `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `xxx`\n            case 'xxxxx':\n            case 'xxx': // Hours and minutes with `:` delimeter\n            default:\n                return formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (GMT)\n    O: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        switch (token) {\n            // Short\n            case 'O':\n            case 'OO':\n            case 'OOO':\n                return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n            // Long\n            case 'OOOO':\n            default:\n                return 'GMT' + formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (specific non-location)\n    z: function (date, token, options) {\n        switch (token) {\n            // Short\n            case 'z':\n            case 'zz':\n            case 'zzz':\n                return tzIntlTimeZoneName('short', date, options);\n            // Long\n            case 'zzzz':\n            default:\n                return tzIntlTimeZoneName('long', date, options);\n        }\n    },\n};\nfunction getTimeZoneOffset(timeZone, originalDate) {\n    const timeZoneOffset = timeZone\n        ? tzParseTimezone(timeZone, originalDate, true) / MILLISECONDS_IN_MINUTE\n        : originalDate?.getTimezoneOffset() ?? 0;\n    if (Number.isNaN(timeZoneOffset)) {\n        throw new RangeError('Invalid time zone specified: ' + timeZone);\n    }\n    return timeZoneOffset;\n}\nfunction addLeadingZeros(number, targetLength) {\n    const sign = number < 0 ? '-' : '';\n    let output = Math.abs(number).toString();\n    while (output.length < targetLength) {\n        output = '0' + output;\n    }\n    return sign + output;\n}\nfunction formatTimezone(offset, delimiter = '') {\n    const sign = offset > 0 ? '-' : '+';\n    const absOffset = Math.abs(offset);\n    const hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n    const minutes = addLeadingZeros(Math.floor(absOffset % 60), 2);\n    return sign + hours + delimiter + minutes;\n}\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n    if (offset % 60 === 0) {\n        const sign = offset > 0 ? '-' : '+';\n        return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n    }\n    return formatTimezone(offset, delimiter);\n}\nfunction formatTimezoneShort(offset, delimiter = '') {\n    const sign = offset > 0 ? '-' : '+';\n    const absOffset = Math.abs(offset);\n    const hours = Math.floor(absOffset / 60);\n    const minutes = absOffset % 60;\n    if (minutes === 0) {\n        return sign + String(hours);\n    }\n    return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n    const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    utcDate.setUTCFullYear(date.getFullYear());\n    return +date - +utcDate;\n}\n","/** Regex to identify the presence of a time zone specifier in a date string */\nexport const tzPattern = /(Z|[+-]\\d{2}(?::?\\d{2})?| UTC| [a-zA-Z]+\\/[a-zA-Z_]+(?:\\/[a-zA-Z_]+)?)$/;\n","import { getTimezoneOffsetInMilliseconds } from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { tzParseTimezone } from '../_lib/tzParseTimezone/index.js';\nimport { tzPattern } from '../_lib/tzPattern/index.js';\nconst MILLISECONDS_IN_HOUR = 3600000;\nconst MILLISECONDS_IN_MINUTE = 60000;\nconst DEFAULT_ADDITIONAL_DIGITS = 2;\nconst patterns = {\n    dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,\n    datePattern: /^([0-9W+-]+)(.*)/,\n    plainTime: /:/,\n    // year tokens\n    YY: /^(\\d{2})$/,\n    YYY: [\n        /^([+-]\\d{2})$/, // 0 additional digits\n        /^([+-]\\d{3})$/, // 1 additional digit\n        /^([+-]\\d{4})$/, // 2 additional digits\n    ],\n    YYYY: /^(\\d{4})/,\n    YYYYY: [\n        /^([+-]\\d{4})/, // 0 additional digits\n        /^([+-]\\d{5})/, // 1 additional digit\n        /^([+-]\\d{6})/, // 2 additional digits\n    ],\n    // date tokens\n    MM: /^-(\\d{2})$/,\n    DDD: /^-?(\\d{3})$/,\n    MMDD: /^-?(\\d{2})-?(\\d{2})$/,\n    Www: /^-?W(\\d{2})$/,\n    WwwD: /^-?W(\\d{2})-?(\\d{1})$/,\n    HH: /^(\\d{2}([.,]\\d*)?)$/,\n    HHMM: /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n    HHMMSS: /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n    // time zone tokens (to identify the presence of a tz)\n    timeZone: tzPattern,\n};\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n * If the function cannot parse the string or the values are invalid, it returns Invalid Date.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.\n *\n * @param argument the value to convert\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @param {string} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n *\n * @returns the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = toDate('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = toDate('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function toDate(argument, options = {}) {\n    if (arguments.length < 1) {\n        throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n    }\n    if (argument === null) {\n        return new Date(NaN);\n    }\n    const additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : Number(options.additionalDigits);\n    if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n        throw new RangeError('additionalDigits must be 0, 1 or 2');\n    }\n    // Clone the date\n    if (argument instanceof Date ||\n        (typeof argument === 'object' && Object.prototype.toString.call(argument) === '[object Date]')) {\n        // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n        return new Date(argument.getTime());\n    }\n    else if (typeof argument === 'number' ||\n        Object.prototype.toString.call(argument) === '[object Number]') {\n        return new Date(argument);\n    }\n    else if (!(Object.prototype.toString.call(argument) === '[object String]')) {\n        return new Date(NaN);\n    }\n    const dateStrings = splitDateString(argument);\n    const { year, restDateString } = parseYear(dateStrings.date, additionalDigits);\n    const date = parseDate(restDateString, year);\n    if (date === null || isNaN(date.getTime())) {\n        return new Date(NaN);\n    }\n    if (date) {\n        const timestamp = date.getTime();\n        let time = 0;\n        let offset;\n        if (dateStrings.time) {\n            time = parseTime(dateStrings.time);\n            if (time === null || isNaN(time)) {\n                return new Date(NaN);\n            }\n        }\n        if (dateStrings.timeZone || options.timeZone) {\n            offset = tzParseTimezone(dateStrings.timeZone || options.timeZone, new Date(timestamp + time));\n            if (isNaN(offset)) {\n                return new Date(NaN);\n            }\n        }\n        else {\n            // get offset accurate to hour in time zones that change offset\n            offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time));\n            offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time + offset));\n        }\n        return new Date(timestamp + time + offset);\n    }\n    else {\n        return new Date(NaN);\n    }\n}\nfunction splitDateString(dateString) {\n    const dateStrings = {};\n    let parts = patterns.dateTimePattern.exec(dateString);\n    let timeString;\n    if (!parts) {\n        parts = patterns.datePattern.exec(dateString);\n        if (parts) {\n            dateStrings.date = parts[1];\n            timeString = parts[2];\n        }\n        else {\n            dateStrings.date = null;\n            timeString = dateString;\n        }\n    }\n    else {\n        dateStrings.date = parts[1];\n        timeString = parts[3];\n    }\n    if (timeString) {\n        const token = patterns.timeZone.exec(timeString);\n        if (token) {\n            dateStrings.time = timeString.replace(token[1], '');\n            dateStrings.timeZone = token[1].trim();\n        }\n        else {\n            dateStrings.time = timeString;\n        }\n    }\n    return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n    if (dateString) {\n        const patternYYY = patterns.YYY[additionalDigits];\n        const patternYYYYY = patterns.YYYYY[additionalDigits];\n        // YYYY or ±YYYYY\n        let token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString);\n        if (token) {\n            const yearString = token[1];\n            return {\n                year: parseInt(yearString, 10),\n                restDateString: dateString.slice(yearString.length),\n            };\n        }\n        // YY or ±YYY\n        token = patterns.YY.exec(dateString) || patternYYY.exec(dateString);\n        if (token) {\n            const centuryString = token[1];\n            return {\n                year: parseInt(centuryString, 10) * 100,\n                restDateString: dateString.slice(centuryString.length),\n            };\n        }\n    }\n    // Invalid ISO-formatted year\n    return {\n        year: null,\n    };\n}\nfunction parseDate(dateString, year) {\n    // Invalid ISO-formatted year\n    if (year === null) {\n        return null;\n    }\n    let date;\n    let month;\n    let week;\n    // YYYY\n    if (!dateString || !dateString.length) {\n        date = new Date(0);\n        date.setUTCFullYear(year);\n        return date;\n    }\n    // YYYY-MM\n    let token = patterns.MM.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        month = parseInt(token[1], 10) - 1;\n        if (!validateDate(year, month)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, month);\n        return date;\n    }\n    // YYYY-DDD or YYYYDDD\n    token = patterns.DDD.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        const dayOfYear = parseInt(token[1], 10);\n        if (!validateDayOfYearDate(year, dayOfYear)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, 0, dayOfYear);\n        return date;\n    }\n    // yyyy-MM-dd or YYYYMMDD\n    token = patterns.MMDD.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        month = parseInt(token[1], 10) - 1;\n        const day = parseInt(token[2], 10);\n        if (!validateDate(year, month, day)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, month, day);\n        return date;\n    }\n    // YYYY-Www or YYYYWww\n    token = patterns.Www.exec(dateString);\n    if (token) {\n        week = parseInt(token[1], 10) - 1;\n        if (!validateWeekDate(week)) {\n            return new Date(NaN);\n        }\n        return dayOfISOWeekYear(year, week);\n    }\n    // YYYY-Www-D or YYYYWwwD\n    token = patterns.WwwD.exec(dateString);\n    if (token) {\n        week = parseInt(token[1], 10) - 1;\n        const dayOfWeek = parseInt(token[2], 10) - 1;\n        if (!validateWeekDate(week, dayOfWeek)) {\n            return new Date(NaN);\n        }\n        return dayOfISOWeekYear(year, week, dayOfWeek);\n    }\n    // Invalid ISO-formatted date\n    return null;\n}\nfunction parseTime(timeString) {\n    let hours;\n    let minutes;\n    // hh\n    let token = patterns.HH.exec(timeString);\n    if (token) {\n        hours = parseFloat(token[1].replace(',', '.'));\n        if (!validateTime(hours)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR;\n    }\n    // hh:mm or hhmm\n    token = patterns.HHMM.exec(timeString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        minutes = parseFloat(token[2].replace(',', '.'));\n        if (!validateTime(hours, minutes)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n    }\n    // hh:mm:ss or hhmmss\n    token = patterns.HHMMSS.exec(timeString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        minutes = parseInt(token[2], 10);\n        const seconds = parseFloat(token[3].replace(',', '.'));\n        if (!validateTime(hours, minutes, seconds)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n    }\n    // Invalid ISO-formatted time\n    return null;\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n    week = week || 0;\n    day = day || 0;\n    const date = new Date(0);\n    date.setUTCFullYear(isoWeekYear, 0, 4);\n    const fourthOfJanuaryDay = date.getUTCDay() || 7;\n    const diff = week * 7 + day + 1 - fourthOfJanuaryDay;\n    date.setUTCDate(date.getUTCDate() + diff);\n    return date;\n}\n// Validation functions\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n    return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\nfunction validateDate(year, month, date) {\n    if (month < 0 || month > 11) {\n        return false;\n    }\n    if (date != null) {\n        if (date < 1) {\n            return false;\n        }\n        const isLeapYear = isLeapYearIndex(year);\n        if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {\n            return false;\n        }\n        if (!isLeapYear && date > DAYS_IN_MONTH[month]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n    if (dayOfYear < 1) {\n        return false;\n    }\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear && dayOfYear > 366) {\n        return false;\n    }\n    if (!isLeapYear && dayOfYear > 365) {\n        return false;\n    }\n    return true;\n}\nfunction validateWeekDate(week, day) {\n    if (week < 0 || week > 52) {\n        return false;\n    }\n    if (day != null && (day < 0 || day > 6)) {\n        return false;\n    }\n    return true;\n}\nfunction validateTime(hours, minutes, seconds) {\n    if (hours < 0 || hours >= 25) {\n        return false;\n    }\n    if (minutes != null && (minutes < 0 || minutes >= 60)) {\n        return false;\n    }\n    if (seconds != null && (seconds < 0 || seconds >= 60)) {\n        return false;\n    }\n    return true;\n}\n","import { format as dateFnsFormat } from 'date-fns/format';\nimport { formatters } from './formatters/index.js';\nimport { toDate } from '../toDate/index.js';\nconst tzFormattingTokensRegExp = /([xXOz]+)|''|'(''|[^'])+('|$)/g;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may consty by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | PDT, EST, CEST                    | 6     |\n * |                                 | zzzz    | Pacific Daylight Time             | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are created using the Intl browser API. The output is determined by the\n *    preferred standard of the current locale (en-US by default) which may not always give the expected result.\n *    For this reason it is recommended to supply a `locale` in the format options when formatting a time zone name.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. These tokens are often confused with others. See: https://git.io/fxCyr\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole\n *   library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard\n *   #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table). See [this\n *   post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param date the original date\n * @param formatStr the string of tokens\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @param {Date|Number} [options.originalDate] - can be used to pass the original unmodified date to `format` to\n *   improve correctness of the replaced timezone token close to the DST threshold.\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see:\n *   https://git.io/fxCyr\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options = {}) {\n    formatStr = String(formatStr);\n    const matches = formatStr.match(tzFormattingTokensRegExp);\n    if (matches) {\n        const d = toDate(options.originalDate || date, options);\n        // Work through each match and replace the tz token in the format string with the quoted\n        // formatted time zone so the remaining tokens can be filled in by date-fns#format.\n        formatStr = matches.reduce(function (result, token) {\n            if (token[0] === \"'\") {\n                return result; // This is a quoted portion, matched only to ensure we don't match inside it\n            }\n            const pos = result.indexOf(token);\n            const precededByQuotedSection = result[pos - 1] === \"'\";\n            const replaced = result.replace(token, \"'\" + formatters[token[0]](d, token, options) + \"'\");\n            // If the replacement results in two adjoining quoted strings, the back to back quotes\n            // are removed, so it doesn't look like an escaped quote.\n            return precededByQuotedSection\n                ? replaced.substring(0, pos - 1) + replaced.substring(pos + 1)\n                : replaced;\n        }, formatStr);\n    }\n    return dateFnsFormat(date, formatStr, options);\n}\n","import { format } from '../format/index.js';\nimport { toZonedTime } from '../toZonedTime/index.js';\n/**\n * @name formatInTimeZone\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @param date the date representing the local time / real UTC time\n * @param timeZone the time zone this date should be formatted for; can be an offset or IANA time zone\n * @param formatStr the string of tokens\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n */\nexport function formatInTimeZone(date, timeZone, formatStr, options) {\n    options = {\n        ...options,\n        timeZone,\n        originalDate: date,\n    };\n    return format(toZonedTime(date, timeZone, { timeZone: options.timeZone }), formatStr, options);\n}\n","import { tzParseTimezone } from '../_lib/tzParseTimezone/index.js';\nimport { toDate } from '../toDate/index.js';\n/**\n * @name toZonedTime\n * @category Time Zone Helpers\n * @summary Get a date/time representing local time in a given time zone from the UTC date\n *\n * @description\n * Returns a date instance with values representing the local time in the time zone\n * specified of the UTC time from the date provided. In other words, when the new date\n * is formatted it will show the equivalent hours in the target time zone regardless\n * of the current system time zone.\n *\n * @param date the date with the relevant UTC time\n * @param timeZone the time zone to get local time for, can be an offset or IANA time zone\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n *\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am UTC is 6am in New York (-04:00)\n * const result = toZonedTime('2014-06-25T10:00:00.000Z', 'America/New_York')\n * //=> Jun 25 2014 06:00:00\n */\nexport function toZonedTime(date, timeZone, options) {\n    date = toDate(date, options);\n    const offsetMilliseconds = tzParseTimezone(timeZone, date, true);\n    const d = new Date(date.getTime() - offsetMilliseconds);\n    const resultDate = new Date(0);\n    resultDate.setFullYear(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());\n    resultDate.setHours(d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());\n    return resultDate;\n}\n","import { formatInTimeZone } from 'date-fns-tz';\n\nexport default class WeatherData {\n\tconstructor(location = 'Lake Forest, CA') {\n\t\tthis.TWELVE_HOURS = 12;\n\t\tthis.TWENTY_FOUR_HOURS = 24;\n\t\tthis._apiCallUnit = null;\n\t\tthis._rawData = null;\n\t\tthis._abbreviatedLocation = null;\n\t\tthis._location = location;\n\t\tthis._valid = false;\n\t\tthis._baseURL =\n\t\t\t'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/';\n\t\tthis._apiKey = 'D99Y9FUTYS77HVAMWTVJV9TV4';\n\t\tthis._units = {\n\t\t\tmetric: false,\n\t\t\tus: true,\n\t\t};\n\t\tthis.noStation = {\n\t\t\tstationID: 'Unavailable',\n\t\t\tstationName: 'Unavailable',\n\t\t\tcoords: '(LAT: N/A | LONG: N/A)',\n\t\t};\n\t}\n\n\tabbreviateLocation() {\n\t\tconst splitLocation = this._location.split(',');\n\t\tconst region =\n\t\t\tsplitLocation.at(-1).trim() === 'USA'\n\t\t\t\t? splitLocation.at(-2)\n\t\t\t\t: splitLocation.at(-1);\n\t\tthis._abbreviatedLocation = `${splitLocation.at(0)},${region}`;\n\t}\n\n\tsetLocation(newLocation) {\n\t\tthis._location = newLocation;\n\t\tthis._rawData = null;\n\t}\n\n\t//swaps units truthiness\n\ttoggleUnitOfMeasurement() {\n\t\t[this._units.metric, this._units.us] = [\n\t\t\tthis._units.us,\n\t\t\tthis._units.metric,\n\t\t];\n\t}\n\n\tget unit() {\n\t\tconst bools = Object.values(this._units);\n\t\tif (new Set(bools).size !== bools.length) {\n\t\t\tthrow Error('Error: duplicate measurement unit detected');\n\t\t}\n\t\tfor (let [unit, bool] of Object.entries(this._units)) {\n\t\t\tif (bool) {\n\t\t\t\treturn unit;\n\t\t\t}\n\t\t}\n\t}\n\n\tget url() {\n\t\treturn `${this._baseURL}${this._location}?unitGroup=${this.unit}&key=${this._apiKey}&contentType=json&iconSet=icons2`;\n\t}\n\n\tget apiCallUnit() {\n\t\treturn this._apiCallUnit;\n\t}\n\n\tset apiCallUnit(unit) {\n\t\tthis._apiCallUnit = unit;\n\t}\n\n\tget todaysWeatherData() {\n\t\treturn this._rawData.days[0];\n\t}\n\n\tget hourlyData() {\n\t\treturn this.todaysWeatherData.hours;\n\t}\n\n\tget weatherState() {\n\t\treturn this.currentConditions.conditions;\n\t}\n\n\tget currentConditions() {\n\t\treturn this._rawData.currentConditions;\n\t}\n\n\tget conditionDescription() {\n\t\treturn this._rawData.description;\n\t}\n\n\tget minTemp() {\n\t\treturn parseInt(this.todaysWeatherData.tempmin);\n\t}\n\n\tget maxTemp() {\n\t\treturn parseInt(this.todaysWeatherData.tempmax);\n\t}\n\n\tget currentTemp() {\n\t\treturn this._rawData.currentConditions.temp;\n\t}\n\n\tget feelsLike() {\n\t\treturn this._rawData.currentConditions.feelslike;\n\t}\n\n\tget timezone() {\n\t\treturn this._rawData.timezone;\n\t}\n\n\tget abbreviatedLocation() {\n\t\treturn this._abbreviatedLocation;\n\t}\n\n\tget currentIcon() {\n\t\treturn this._rawData.currentConditions.icon;\n\t}\n\n\tget validity() {\n\t\treturn this._valid;\n\t}\n\n\tget nearestStation() {\n\t\tif (!Object.hasOwn(this._rawData, 'stations')) {\n\t\t\treturn this.noStation;\n\t\t}\n\n\t\tconst stations = Object.entries(this._rawData.stations);\n\t\tconst distances = stations.map(\n\t\t\tstationArray => stationArray.at(1).distance,\n\t\t);\n\t\tconst minDistance = Math.min.apply(null, distances);\n\t\tconst nearestStationIdx = stations.findIndex(\n\t\t\tstationArray => stationArray.at(1).distance === minDistance,\n\t\t);\n\n\t\treturn stations.at(nearestStationIdx);\n\t}\n\n\tget rawData() {\n\t\treturn this._rawData;\n\t}\n\n\tget location() {\n\t\treturn this._location;\n\t}\n\n\tset conditionDescription(description) {\n\t\tthis._rawData.description = description;\n\t}\n\n\tset rawData(data) {\n\t\tthis._rawData = data;\n\t}\n\n\tset weatherState(state) {\n\t\treturn (this.currentConditions.conditions = state);\n\t}\n\n\tgetTenDayHighs() {\n\t\treturn this.getDays(10).map(day => day.tempmax);\n\t}\n\n\tgetTenDayLows() {\n\t\treturn this.getDays(10).map(day => day.tempmin);\n\t}\n\n\t// accepts integer as number of days including today\n\tgetHours(numOfDays) {\n\t\tif (numOfDays <= 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (numOfDays >= 15) {\n\t\t\treturn;\n\t\t}\n\t\tconst cumulativeHours = this._rawData.days\n\t\t\t.slice(0, numOfDays)\n\t\t\t.flatMap(day => day.hours);\n\t\treturn cumulativeHours;\n\t}\n\n\tgetDays(numOfDays) {\n\t\tif (numOfDays <= 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (numOfDays >= 15) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._rawData.days.slice(0, numOfDays);\n\t}\n\n\tgetNextFortyEightHours() {\n\t\treturn this.getHours(2); // 2 === 2 days (48 hours)\n\t}\n\n\tgetNextTwentyFourHourData() {\n\t\treturn this.getNextFortyEightHours().slice(\n\t\t\tthis.getMerdiemAdjustedStartHour(),\n\t\t\tthis.getMerdiemAdjustedStartHour() + this.TWENTY_FOUR_HOURS,\n\t\t);\n\t}\n\n\tgetNextTwentyFourHourTemps() {\n\t\treturn this.getNextTwentyFourHourData().map(hour => hour.temp);\n\t}\n\n\tgetMeridiem() {\n\t\treturn formatInTimeZone(new Date(), this.timezone, 'aaa');\n\t}\n\n\tgetCurrentHour() {\n\t\treturn parseInt(formatInTimeZone(new Date(), this.timezone, 'h'));\n\t}\n\n\tgetMerdiemAdjustedStartHour() {\n\t\treturn this.getMeridiem() === 'am'\n\t\t\t? this.getCurrentHour()\n\t\t\t: this.getCurrentHour() + this.TWELVE_HOURS;\n\t}\n\n\tasync fetchWeatherData() {\n\t\ttry {\n\t\t\tconst resp = await fetch(this.url);\n\t\t\tif (!resp.ok) {\n\t\t\t\tthis._valid = false;\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis._valid = true;\n\t\t\t\tthis.rawData = await resp.json(); //other methods can use this without using another api call\n\t\t\t\tthis.abbreviateLocation();\n\t\t\t\tthis.apiCallUnit = this.unit;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n","import { formatInTimeZone } from 'date-fns-tz';\n\nexport default class TimeKeeper {\n\tconstructor() {\n\t\tthis.intervalID = null;\n\t\tthis.currTime = null;\n\t\tthis.prevTime = null;\n\t\tthis.currHour = null;\n\t\tthis.prevHour = null;\n\t}\n\n\tparseHour(time) {\n\t\treturn time.split(':').at(0);\n\t}\n\n\tstartTimeKeeper(timezone, callback) {\n\t\tif (this.intervalID !== null) clearInterval(this.intervalID);\n\t\tthis.intervalID = setInterval(() => {\n\t\t\tthis.prevTime = this.currTime || '0';\n\t\t\tthis.prevHour = this.parseHour(this.prevTime);\n\t\t\tthis.currTime = formatInTimeZone(new Date(), timezone, 'h:mmaaa');\n\t\t\tthis.currHour = this.parseHour(this.currTime);\n\n\t\t\tcallback({\n\t\t\t\tcurrTime: this.currTime,\n\t\t\t\tprevHour: this.prevHour,\n\t\t\t\tcurrHour: this.currHour,\n\t\t\t});\n\t\t}, 1000);\n\t\treturn formatInTimeZone(new Date(), timezone, 'h:mmaaa');\n\t}\n}\n","//see description of { block: 'nearest' } here: https://stackoverflow.com/a/48635751/628418\n\nexport default class CarouselHandler {\n\tconstructor(carousel, hourCards, carouselWrapper) {\n\t\tthis.carousel = carousel;\n\t\tthis.hourCardsArr = Array.from(hourCards);\n\t\tthis.carouselWrapper = carouselWrapper;\n\t\tthis.init();\n\t}\n\n\tshiftCarouselBackward(cardWidth) {\n\t\tconst numberOfCards = Math.round(this.carousel.scrollLeft / cardWidth);\n\n\t\tif (numberOfCards - 1 <= 0) {\n\t\t\tthis.hourCardsArr[0].scrollIntoView({ block: 'nearest' });\n\t\t\treturn;\n\t\t}\n\t\tthis.hourCardsArr[numberOfCards - 1].scrollIntoView({\n\t\t\tblock: 'nearest',\n\t\t});\n\t}\n\n\tshiftCarouselForward(cardWidth) {\n\t\tconst carouselRightEdge =\n\t\t\tthis.carousel.clientWidth + this.carousel.scrollLeft;\n\t\tconst numberOfCards = carouselRightEdge / cardWidth;\n\t\tconst wholeNumber = parseFloat((numberOfCards + '').split(/\\D/).at(0));\n\n\t\tif (wholeNumber >= this.hourCardsArr.length - 1) {\n\t\t\tthis.hourCardsArr[this.hourCardsArr.length - 1].scrollIntoView({\n\t\t\t\tblock: 'nearest',\n\t\t\t});\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.hourCardsArr\n\t\t\t\t.at(wholeNumber + 1)\n\t\t\t\t.scrollIntoView({ block: 'nearest' });\n\t\t}\n\t}\n\n\thandleCarouselDirectionClicks(e) {\n\t\tconst target = e.target.closest('.carousel-btn');\n\t\tif (target === null) return;\n\n\t\tconst targetClasses = target.classList;\n\t\tconst carouselColGap = parseInt(\n\t\t\twindow\n\t\t\t\t.getComputedStyle(this.carousel)\n\t\t\t\t.getPropertyValue('column-gap'),\n\t\t); //px\n\t\tconst cardWidth = this.hourCardsArr[0].offsetWidth + carouselColGap;\n\n\t\tconst directionMapping = {\n\t\t\tbackward: () => this.shiftCarouselBackward(cardWidth),\n\t\t\tforward: () => this.shiftCarouselForward(cardWidth),\n\t\t};\n\n\t\tfor (let [direction, handler] of Object.entries(directionMapping)) {\n\t\t\tif (targetClasses.contains(direction)) {\n\t\t\t\thandler();\n\t\t\t}\n\t\t}\n\t}\n\n\tscrollToCurrentHour() {\n\t\tthis.hourCardsArr[0].scrollIntoView({ block: 'start' });\n\t}\n\n\tinit() {\n\t\tthis.carouselWrapper.addEventListener('click', e =>\n\t\t\tthis.handleCarouselDirectionClicks(e),\n\t\t);\n\t\t// this.scrollToCurrentHour();\n\t}\n}\n","export default class NWS {\n\tconstructor() {\n\t\tthis._rawData = null;\n\t\tthis._stationID = null;\n\t\tthis.baseURL = 'https://api.weather.gov/stations/';\n\t\tthis._stationName = null;\n\t}\n\n\tasync fetchStation() {\n\t\ttry {\n\t\t\tthis.response = await fetch(`${this.baseURL}${this._stationID}`);\n\t\t\tif (!this.response.ok) {\n\t\t\t\tthis._stationName = this._stationID;\n\t\t\t} else {\n\t\t\t\tthis._rawData = await this.response.json();\n\t\t\t\tthis._stationName = this._rawData.properties.name;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t}\n\n\tget stationName() {\n\t\treturn this._stationName;\n\t}\n\n\tset stationID(stationID) {\n\t\tthis._stationID = stationID;\n\t}\n\n\tset stationName(name) {\n\t\tthis._stationName = name;\n\t}\n}\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import TimeKeeper from './TimeKeeper.js';\nimport CarouselHandler from './CarouselHandler.js';\nimport NWS from './NationalWeatherService.js';\nimport { format, parseISO } from 'date-fns';\nimport '../stylesheets/ten-day-forecast.css';\nimport '../stylesheets/current-forecast.css';\nimport '../stylesheets/circular-readout.css';\nimport '../stylesheets/hourly-forecast.css';\nimport '../stylesheets/searchbar.css';\n\nexport default class DomManager {\n\tconstructor(elememts) {\n\t\tthis.TWELVE_HOURS = 12;\n\t\tthis.TWENTY_FOUR_HOURS = 24;\n\t\tthis.elementKeeper = elememts;\n\t\tnew CarouselHandler(\n\t\t\tthis.elementKeeper.carousel,\n\t\t\tthis.elementKeeper.hourCards,\n\t\t\tthis.elementKeeper.carouselWrapper,\n\t\t);\n\t\tthis.nws = new NWS();\n\t\tthis.timeKeeper = new TimeKeeper();\n\t\tthis.init();\n\t}\n\n\tgetUnitString(unit) {\n\t\treturn unit === 'us' ? 'F' : 'C';\n\t}\n\n\tasync setImgIcon(img, icon) {\n\t\tconst iconName = icon.toLowerCase();\n\t\tconst iconModule = await import(\n\t\t\t`../assets/svgs/weatherIcons/${iconName}.svg`\n\t\t);\n\t\tconst iconURL = iconModule.default;\n\n\t\treturn new Promise(resolve => {\n\t\t\timg.onload = resolve;\n\t\t\timg.src = iconURL;\n\t\t\timg.alt = `${icon.split('-').join(' ')} icon`;\n\t\t});\n\t}\n\n\tsetSeachbarMetaData(newLocation) {\n\t\tthis.elementKeeper.searchbar.value = newLocation;\n\t\tthis.elementKeeper.searchbar.innerText = newLocation;\n\t}\n\n\tasync populateTenDayForecast(tenDayForecast, currentIcon) {\n\t\tconst imgPromises = [];\n\n\t\tfor (let i = 0; i < this.elementKeeper.highs.length; i++) {\n\t\t\tif (i === 0) {\n\t\t\t\tthis.elementKeeper.dates[i].textContent = 'Today';\n\t\t\t} else if (i === 1) {\n\t\t\t\tthis.elementKeeper.dates[i].textContent = 'Tomorrow';\n\t\t\t} else {\n\t\t\t\tthis.elementKeeper.dates[i].textContent = format(\n\t\t\t\t\tparseISO(tenDayForecast[i].datetime),\n\t\t\t\t\t'ccc do',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.elementKeeper.highs[i].textContent =\n\t\t\t\t`${Math.round(tenDayForecast[i].tempmax)}°`;\n\t\t\tthis.elementKeeper.lows[i].textContent =\n\t\t\t\t`${Math.round(tenDayForecast[i].tempmin)}°`;\n\t\t\tthis.elementKeeper.dailyPrecipChance[i].innerText =\n\t\t\t\t`${Math.round(tenDayForecast[i].precipprob)}%`;\n\n\t\t\tconst imgPromise =\n\t\t\t\ti === 0\n\t\t\t\t\t? this.setImgIcon(\n\t\t\t\t\t\t\tthis.elementKeeper.dailyWeatherIcons[i],\n\t\t\t\t\t\t\tcurrentIcon,\n\t\t\t\t\t\t)\n\t\t\t\t\t: this.setImgIcon(\n\t\t\t\t\t\t\tthis.elementKeeper.dailyWeatherIcons[i],\n\t\t\t\t\t\t\ttenDayForecast[i].icon,\n\t\t\t\t\t\t);\n\t\t\timgPromises.push(imgPromise);\n\t\t}\n\n\t\tawait Promise.all(imgPromises);\n\t}\n\n\tasync populateHourlyForecast(\n\t\tnextTwentyFourHours,\n\t\tmeridiem,\n\t\tcurrentIcon,\n\t\tcurrentHour,\n\t) {\n\t\tconst imgPromises = [];\n\t\tconst nextTwentyFourHoursPrecipChance = nextTwentyFourHours.map(hour =>\n\t\t\tMath.round(hour.precipprob),\n\t\t);\n\n\t\tfor (let i = 0; i < this.TWENTY_FOUR_HOURS; i++) {\n\t\t\tlet hour = (currentHour + i) % this.TWELVE_HOURS;\n\t\t\tif (hour === 0) {\n\t\t\t\thour = this.TWELVE_HOURS;\n\t\t\t\tmeridiem = meridiem === 'am' ? 'pm' : 'am';\n\t\t\t}\n\t\t\tthis.elementKeeper.times[i].textContent = `${hour}${meridiem}`;\n\t\t\tthis.elementKeeper.hourlyTemps[i].textContent =\n\t\t\t\t`${Math.round(nextTwentyFourHours[i].temp)}°`;\n\t\t\tthis.elementKeeper.hourlyPrecipitationChances[i].innerText =\n\t\t\t\t`${nextTwentyFourHoursPrecipChance[i]}%`;\n\n\t\t\tconst imgPromise =\n\t\t\t\ti === 0\n\t\t\t\t\t? this.setImgIcon(\n\t\t\t\t\t\t\tthis.elementKeeper.hourlyWeatherIcons[i],\n\t\t\t\t\t\t\tcurrentIcon,\n\t\t\t\t\t\t)\n\t\t\t\t\t: this.setImgIcon(\n\t\t\t\t\t\t\tthis.elementKeeper.hourlyWeatherIcons[i],\n\t\t\t\t\t\t\tnextTwentyFourHours[i].icon,\n\t\t\t\t\t\t);\n\t\t\timgPromises.push(imgPromise);\n\t\t}\n\t\tawait Promise.all(imgPromises);\n\t}\n\n\tpopulateCircularReadout(circle, max, value) {\n\t\tconst adjustedConicProgress = (value / max) * 100;\n\n\t\tcircle.setAttribute('aria-valuenow', value);\n\t\tcircle.style.setProperty('--progress', adjustedConicProgress + '%'); // for the conic gradient progress\n\n\t\tif (value >= max) {\n\t\t\tcircle.classList.add('full-meter');\n\t\t} else {\n\t\t\tcircle.classList.remove('full-meter');\n\t\t}\n\t}\n\n\tasync populateCurrentConditions(\n\t\tcurrentConditions,\n\t\tconditionDescription,\n\t\tminTemp,\n\t\tmaxTemp,\n\t\tunit,\n\t) {\n\t\tconst imgPromises = [];\n\t\tconst currentCondtionDict = {\n\t\t\tconditions: condition => {\n\t\t\t\tthis.elementKeeper.weatherState.textContent = condition;\n\t\t\t},\n\t\t\tfeelslike: feelsLikeTemp => {\n\t\t\t\tthis.elementKeeper.feelsLike.textContent = `${feelsLikeTemp}°`;\n\t\t\t},\n\t\t\thumidity: currHumidity => {\n\t\t\t\tconst maxHumidity = 100;\n\t\t\t\tthis.populateCircularReadout(\n\t\t\t\t\tthis.elementKeeper.humidity,\n\t\t\t\t\tmaxHumidity,\n\t\t\t\t\tcurrHumidity,\n\t\t\t\t);\n\t\t\t},\n\t\t\ticon: icon => {\n\t\t\t\timgPromises.push(\n\t\t\t\t\tthis.setImgIcon(this.elementKeeper.currentWeatherIcon, icon),\n\t\t\t\t);\n\t\t\t},\n\t\t\tprecipprob: precipProb => {\n\t\t\t\tconst maxPrecipProb = 100;\n\t\t\t\tthis.populateCircularReadout(\n\t\t\t\t\tthis.elementKeeper.precipitation,\n\t\t\t\t\tmaxPrecipProb,\n\t\t\t\t\tprecipProb,\n\t\t\t\t);\n\t\t\t},\n\t\t\ttemp: currTemp => {\n\t\t\t\tthis.elementKeeper.currentTemp.textContent = `${currTemp}°${this.getUnitString(unit)}`;\n\t\t\t},\n\t\t\tuvindex: UVIndex => {\n\t\t\t\tconst maxUVIndex = 12;\n\t\t\t\tthis.populateCircularReadout(\n\t\t\t\t\tthis.elementKeeper.uvIndex,\n\t\t\t\t\tmaxUVIndex,\n\t\t\t\t\tUVIndex,\n\t\t\t\t);\n\t\t\t},\n\t\t\tvisibility: visibleDistance => {\n\t\t\t\tthis.elementKeeper.visibleDistance.textContent = `${visibleDistance}mi`;\n\t\t\t},\n\t\t};\n\n\t\tfor (let [weatherElement, value] of Object.entries(\n\t\t\tcurrentConditions,\n\t\t)) {\n\t\t\tif (Object.hasOwn(currentCondtionDict, weatherElement)) {\n\t\t\t\tif (!isNaN(value)) value = Math.round(value);\n\t\t\t\tcurrentCondtionDict[weatherElement](value);\n\t\t\t}\n\t\t}\n\n\t\tthis.elementKeeper.minTemp.textContent = `${minTemp}°`;\n\t\tthis.elementKeeper.maxTemp.textContent = `${maxTemp}°`;\n\t\tthis.elementKeeper.forecastDescription.textContent =\n\t\t\tconditionDescription;\n\t\tawait Promise.all(imgPromises);\n\t}\n\n\tasync populateBottomLevelDecor(weatherStation) {\n\t\tlet coords = null;\n\t\tif (!Array.isArray(weatherStation)) {\n\t\t\tconst invalidStation = weatherStation;\n\t\t\tthis.nws.stationID = invalidStation.stationID;\n\t\t\tthis.nws.stationName = invalidStation.stationName;\n\t\t\tcoords = invalidStation.coords;\n\t\t} else {\n\t\t\tthis.nws.stationID = weatherStation[0];\n\t\t\tawait this.nws.fetchStation();\n\t\t\tcoords = `(LAT: ${weatherStation[1].latitude} | LONG: ${weatherStation[1].longitude})`;\n\t\t}\n\n\t\tthis.elementKeeper.weatherStationCoords.innerText = coords;\n\t\tthis.elementKeeper.weatherStationName.innerText = this.nws.stationName;\n\t}\n\n\tasync setHourlyForecast(weatherData) {\n\t\t//fix setHourlyForecast being called two times at start\n\t\tawait this.populateHourlyForecast(\n\t\t\tweatherData.nextTwentyFourHours,\n\t\t\tweatherData.meridiem,\n\t\t\tweatherData.currentIcon,\n\t\t\tweatherData.currentHour,\n\t\t);\n\t}\n\n\tsetTime(currTime) {\n\t\tthis.elementKeeper.currentTime.innerText = currTime;\n\t}\n\n\tprocessTime(timeData, weatherData) {\n\t\tconst { currTime, prevHour, currHour } = timeData;\n\t\tif (currHour === prevHour) return;\n\n\t\tthis.setTime(currTime);\n\t\tthis.setHourlyForecast(weatherData);\n\t}\n\n\tasync populateData(weatherData) {\n\t\tthis.setTime(\n\t\t\tthis.timeKeeper.startTimeKeeper(weatherData.timezone, timeData =>\n\t\t\t\tthis.processTime(timeData, weatherData),\n\t\t\t),\n\t\t);\n\n\t\tawait this.populateCurrentConditions(\n\t\t\tweatherData.currentConditions,\n\t\t\tweatherData.conditionDescription,\n\t\t\tweatherData.minTemp,\n\t\t\tweatherData.maxTemp,\n\t\t\tweatherData.unit,\n\t\t\tweatherData.timezone,\n\t\t);\n\t\tawait this.populateBottomLevelDecor(weatherData.station);\n\t\tawait this.populateTenDayForecast(\n\t\t\tweatherData.tenDayForecast,\n\t\t\tweatherData.currentIcon,\n\t\t\tweatherData.unit,\n\t\t);\n\t\tawait this.setHourlyForecast(weatherData);\n\t}\n\n\tremoveAnimations() {\n\t\t[\n\t\t\tthis.elementKeeper.contentWrapper,\n\t\t\tthis.elementKeeper.loaderTop,\n\t\t\tthis.elementKeeper.loaderBottom,\n\t\t].forEach(element => {\n\t\t\t[...element.classList].forEach(cls => {\n\t\t\t\tif (cls.includes('animate')) {\n\t\t\t\t\telement.classList.remove(cls);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tstartRevealAnimations() {\n\t\tthis.elementKeeper.loaderTop.classList.add('animate-reveal');\n\t\tthis.elementKeeper.loaderBottom.classList.add('animate-reveal');\n\t\tthis.elementKeeper.loaderBottom.addEventListener(\n\t\t\t'animationend',\n\t\t\t() => {\n\t\t\t\tthis.elementKeeper.loaderTop.classList.add('animate-retract');\n\t\t\t\tthis.elementKeeper.loaderBottom.classList.add('animate-retract');\n\t\t\t\tthis.elementKeeper.contentWrapper.classList.add(\n\t\t\t\t\t'animate-constrain',\n\t\t\t\t\t'animate-revealing',\n\t\t\t\t);\n\t\t\t\tthis.elementKeeper.contentWrapper.addEventListener(\n\t\t\t\t\t'animationend',\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.removeAnimations();\n\t\t\t\t\t},\n\t\t\t\t\t{ once: true },\n\t\t\t\t);\n\t\t\t},\n\t\t\t{ once: true },\n\t\t);\n\t}\n\n\taddAnimationConstrain() {\n\t\tthis.elementKeeper.contentWrapper.classList.add('animate-constrain');\n\t}\n\n\tstartBlinkAnimation() {\n\t\tthis.elementKeeper.loaderTop.classList.add('animate-blink');\n\t\tthis.elementKeeper.loaderBottom.classList.add('animate-blink');\n\t}\n\n\thideResults() {\n\t\tthis.elementKeeper.searchResultElements.forEach(searchResult => {\n\t\t\tsearchResult.classList.add('hidden');\n\t\t});\n\t\tthis.elementKeeper.noResults.classList.add('hidden');\n\t}\n\n\tupdateSearchbarValue(location) {\n\t\tthis.elementKeeper.searchbar.value = location;\n\t}\n\n\tshowLocationResults(searchResults) {\n\t\tthis.elementKeeper.searchResultContainer.classList.remove('hidden');\n\t\tfor (let i = 0; i < searchResults.length; i++) {\n\t\t\tthis.elementKeeper.searchResultElements[i].classList.remove(\n\t\t\t\t'hidden',\n\t\t\t);\n\t\t\tthis.elementKeeper.searchResultElements[i].textContent =\n\t\t\t\tsearchResults[i];\n\t\t\tthis.elementKeeper.searchResultElements[i].value = searchResults[i];\n\t\t}\n\t}\n\n\tshowNoResults() {\n\t\tthis.elementKeeper.searchResultContainer.classList.remove('hidden');\n\t\tthis.elementKeeper.noResults.classList.remove('hidden');\n\t}\n\n\tshowNoLocationErrorMsg(location) {\n\t\tthis.elementKeeper.noWeatherDataLocation.innerText = location;\n\t\tthis.elementKeeper.nolocationModal.showModal();\n\t}\n\n\tconvertToCelsius(temp, unit) {\n\t\t//tests to see if the user is starting on fahrenheit (us)\n\t\tif (unit === 'metric') {\n\t\t\treturn temp;\n\t\t}\n\t\treturn (temp - 32) * (5 / 9);\n\t}\n\n\tconvertToFahrenheit(temp, unit) {\n\t\t//tests to see if the user is starting on fahrenheit (us)\n\t\tif (unit === 'us') {\n\t\t\treturn temp;\n\t\t}\n\t\treturn temp * (9 / 5) + 32;\n\t}\n\n\tconvertUnits(weatherData, conversionMap, converstionMethod) {\n\t\tfor (let [prop, value] of Object.entries(weatherData)) {\n\t\t\tif (Object.hasOwn(conversionMap, prop)) {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tvalue = value.map(val =>\n\t\t\t\t\t\tconverstionMethod(val, weatherData.apiCallUnit),\n\t\t\t\t\t);\n\t\t\t\t\tconversionMap[prop](value);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converstionMethod(value, weatherData.apiCallUnit);\n\t\t\t\t\tconversionMap[prop](value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateUnitsOfMeasurement(weatherData) {\n\t\tconst temps = {\n\t\t\thourlyTemps: this.elementKeeper.hourlyTemps,\n\t\t\tminTemp: this.elementKeeper.minTemp,\n\t\t\tmaxTemp: this.elementKeeper.maxTemp,\n\t\t\tcurrentTemp: this.elementKeeper.currentTemp,\n\t\t\tfeelsLike: this.elementKeeper.feelsLike,\n\t\t\thighs: this.elementKeeper.highs,\n\t\t\tlows: this.elementKeeper.lows,\n\t\t};\n\n\t\tconst conversionMap = {\n\t\t\tcurrentTemp: temp => {\n\t\t\t\ttemps.currentTemp.innerText = `${Math.round(temp)}°${this.getUnitString(weatherData.unit)}`;\n\t\t\t},\n\t\t\tfeelsLike: temp =>\n\t\t\t\t(temps.feelsLike.innerText = `${Math.round(temp)}°`),\n\t\t\tmaxTemp: temp => (temps.maxTemp.innerText = `${Math.round(temp)}°`),\n\t\t\tminTemp: temp => (temps.minTemp.innerText = `${Math.round(temp)}°`),\n\t\t\tnextTwentyFourHours: hoursArr => {\n\t\t\t\ttemps.hourlyTemps.forEach((hour, i) => {\n\t\t\t\t\thour.innerText = `${Math.round(hoursArr[i])}°`;\n\t\t\t\t});\n\t\t\t},\n\t\t\ttenDayHighs: highsArr => {\n\t\t\t\ttemps.highs.forEach((high, i) => {\n\t\t\t\t\thigh.innerText = `${Math.round(highsArr[i])}°`;\n\t\t\t\t});\n\t\t\t},\n\t\t\ttenDayLows: lowsArr => {\n\t\t\t\ttemps.lows.forEach((low, i) => {\n\t\t\t\t\tlow.innerText = `${Math.round(lowsArr[i])}°`;\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\n\t\tif (weatherData.prevSIUnit === 'metric') {\n\t\t\tthis.convertUnits(\n\t\t\t\tweatherData,\n\t\t\t\tconversionMap,\n\t\t\t\tthis.convertToFahrenheit,\n\t\t\t);\n\t\t} else if (weatherData.prevSIUnit === 'us') {\n\t\t\tthis.convertUnits(weatherData, conversionMap, this.convertToCelsius);\n\t\t}\n\t}\n\n\tupdateUnitConversionBtn() {\n\t\tconst unit = this.elementKeeper.unitConversionBtn.dataset.unit;\n\t\tthis.elementKeeper.unitConversionBtn.dataset.unit =\n\t\t\tunit === 'fahrenheit' ? 'celsius' : 'fahrenheit';\n\t}\n\n\thandleSettingsClick() {\n\t\tthis.elementKeeper.settingsWrapper.classList.toggle('hidden');\n\t}\n\n\thandleOutOfBoundsClick(e) {\n\t\tconst searchbar = this.elementKeeper.searchbar;\n\t\tconst isInBounds = e.composedPath().includes(searchbar);\n\n\t\tif (!isInBounds) {\n\t\t\tthis.hideResults();\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.elementKeeper.settingsBtn.addEventListener('click', () =>\n\t\t\tthis.handleSettingsClick(),\n\t\t);\n\t\tthis.elementKeeper.closeModalBtn.addEventListener('click', () => {\n\t\t\tthis.elementKeeper.nolocationModal.close();\n\t\t});\n\n\t\tdocument.addEventListener('click', e =>\n\t\t\tthis.handleOutOfBoundsClick(e),\n\t\t);\n\t}\n}\n","export default class DomElementKeeper {\n\tconstructor() {\n\t\tthis.elements = {};\n\t\tthis.elementsToQuery = {\n\t\t\tdates: {\n\t\t\t\tselector: '.ten-day-forecast .ten-day-card-title',\n\t\t\t\tall: true,\n\t\t\t},\n\t\t\tlows: { selector: '.ten-day-forecast .ten-day-low', all: true },\n\t\t\thighs: { selector: '.ten-day-forecast .ten-day-high', all: true },\n\t\t\tforecastDescription: {\n\t\t\t\tselector: '.weather-description',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tminTemp: { selector: '.low-temp-reading', all: false },\n\t\t\tmaxTemp: { selector: '.high-temp-reading', all: false },\n\t\t\tcurrentTime: { selector: '.current-time', all: false },\n\t\t\tweatherState: { selector: '.weather-state.title', all: false },\n\t\t\tfeelsLike: { selector: '.feels-like-temp', all: false },\n\t\t\thumidity: { selector: '.progressbar.humidity', all: false },\n\t\t\tprecipitation: {\n\t\t\t\tselector: '.progressbar.precipitation',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tuvIndex: { selector: '.progressbar.uv-index', all: false },\n\t\t\tcurrentTemp: { selector: '.current-temp', all: false },\n\t\t\ttimes: { selector: '.time', all: true },\n\t\t\thourlyTemps: { selector: '.hourly-temp', all: true },\n\t\t\tcarousel: { selector: '.carousel', all: false },\n\t\t\thourCards: { selector: '.hour-card', all: true },\n\t\t\tcarouselWrapper: { selector: '.carousel-wrapper', all: false },\n\t\t\tcontentWrapper: { selector: '.content-wrapper', all: false },\n\t\t\tloaderTop: { selector: '.loader-top', all: false },\n\t\t\tloaderBottom: { selector: '.loader-bottom', all: false },\n\t\t\tform: { selector: 'form', all: false },\n\t\t\tsearchbar: { selector: '[type=\"search\"]', all: false },\n\t\t\tsearchResultElements: { selector: '.search-result', all: true },\n\t\t\tsearchResultContainer: { selector: '.search-results', all: false },\n\t\t\tnoResults: { selector: '.no-results', all: false },\n\t\t\tcurrentWeatherIcon: {\n\t\t\t\tselector: '.current-conditions-icon-wrapper img',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\thourlyWeatherIcons: {\n\t\t\t\tselector: '.hour-condition-icon img',\n\t\t\t\tall: true,\n\t\t\t},\n\t\t\tdailyWeatherIcons: {\n\t\t\t\tselector: '.ten-day-icon-wrapper img',\n\t\t\t\tall: true,\n\t\t\t},\n\t\t\thourlyPrecipitationChances: {\n\t\t\t\tselector: '.hour-precip-chance',\n\t\t\t\tall: true,\n\t\t\t},\n\t\t\tdailyPrecipChance: { selector: '.daily-precip-chance', all: true },\n\t\t\tweatherStationName: {\n\t\t\t\tselector: '.weather-station-name',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tweatherStationName: {\n\t\t\t\tselector: '.weather-station-name span',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tweatherStationCoords: {\n\t\t\t\tselector: '.weather-station-coords span',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tnolocationModal: {\n\t\t\t\tselector: '#modal',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tnoWeatherDataLocation: {\n\t\t\t\tselector: '.no-data-location',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tcloseModalBtn: {\n\t\t\t\tselector: '.close-modal',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tvisibleDistance: {\n\t\t\t\tselector: '.visibile-distance',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tsettingsBtn: {\n\t\t\t\tselector: 'button:has(img[alt=\"settings\"])',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tsettingsWrapper: {\n\t\t\t\tselector: '.settings-wrapper',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t\tunitConversionBtn: {\n\t\t\t\tselector: '.unit-conversion-btn',\n\t\t\t\tall: false,\n\t\t\t},\n\t\t};\n\t\tthis.queryElements(this.elementsToQuery);\n\t}\n\n\tqueryElements(selectors) {\n\t\tObject.entries(selectors).forEach(([key, selectorOptions]) => {\n\t\t\tselectorOptions.all === false\n\t\t\t\t? (this.elements[key] = document.querySelector(\n\t\t\t\t\t\tselectorOptions.selector,\n\t\t\t\t\t))\n\t\t\t\t: (this.elements[key] = document.querySelectorAll(\n\t\t\t\t\t\tselectorOptions.selector,\n\t\t\t\t\t));\n\t\t});\n\t}\n\n\tget dates() {\n\t\treturn this.elements.dates;\n\t}\n\tget lows() {\n\t\treturn this.elements.lows;\n\t}\n\tget highs() {\n\t\treturn this.elements.highs;\n\t}\n\tget forecastDescription() {\n\t\treturn this.elements.forecastDescription;\n\t}\n\tget minTemp() {\n\t\treturn this.elements.minTemp;\n\t}\n\tget maxTemp() {\n\t\treturn this.elements.maxTemp;\n\t}\n\tget currentTime() {\n\t\treturn this.elements.currentTime;\n\t}\n\tget weatherState() {\n\t\treturn this.elements.weatherState;\n\t}\n\tget feelsLike() {\n\t\treturn this.elements.feelsLike;\n\t}\n\tget humidity() {\n\t\treturn this.elements.humidity;\n\t}\n\tget precipitation() {\n\t\treturn this.elements.precipitation;\n\t}\n\tget uvIndex() {\n\t\treturn this.elements.uvIndex;\n\t}\n\tget currentTemp() {\n\t\treturn this.elements.currentTemp;\n\t}\n\tget times() {\n\t\treturn this.elements.times;\n\t}\n\tget hourlyTemps() {\n\t\treturn this.elements.hourlyTemps;\n\t}\n\tget carousel() {\n\t\treturn this.elements.carousel;\n\t}\n\tget hourCards() {\n\t\treturn this.elements.hourCards;\n\t}\n\tget carouselWrapper() {\n\t\treturn this.elements.carouselWrapper;\n\t}\n\tget contentWrapper() {\n\t\treturn this.elements.contentWrapper;\n\t}\n\tget loaderTop() {\n\t\treturn this.elements.loaderTop;\n\t}\n\tget loaderBottom() {\n\t\treturn this.elements.loaderBottom;\n\t}\n\tget form() {\n\t\treturn this.elements.form;\n\t}\n\tget searchbar() {\n\t\treturn this.elements.searchbar;\n\t}\n\tget searchResultElements() {\n\t\treturn this.elements.searchResultElements;\n\t}\n\tget searchResultContainer() {\n\t\treturn this.elements.searchResultContainer;\n\t}\n\tget noResults() {\n\t\treturn this.elements.noResults;\n\t}\n\tget currentWeatherIcon() {\n\t\treturn this.elements.currentWeatherIcon;\n\t}\n\tget hourlyWeatherIcons() {\n\t\treturn this.elements.hourlyWeatherIcons;\n\t}\n\tget dailyWeatherIcons() {\n\t\treturn this.elements.dailyWeatherIcons;\n\t}\n\tget hourlyPrecipitationChances() {\n\t\treturn this.elements.hourlyPrecipitationChances;\n\t}\n\tget dailyPrecipChance() {\n\t\treturn this.elements.dailyPrecipChance;\n\t}\n\tget weatherStationCoords() {\n\t\treturn this.elements.weatherStationCoords;\n\t}\n\tget weatherStationName() {\n\t\treturn this.elements.weatherStationName;\n\t}\n\n\tget nolocationModal() {\n\t\treturn this.elements.nolocationModal;\n\t}\n\tget noWeatherDataLocation() {\n\t\treturn this.elements.noWeatherDataLocation;\n\t}\n\tget closeModalBtn() {\n\t\treturn this.elements.closeModalBtn;\n\t}\n\tget visibleDistance() {\n\t\treturn this.elements.visibleDistance;\n\t}\n\tget settingsBtn() {\n\t\treturn this.elements.settingsBtn;\n\t}\n\tget settingsWrapper() {\n\t\treturn this.elements.settingsWrapper;\n\t}\n\tget unitConversionBtn() {\n\t\treturn this.elements.unitConversionBtn;\n\t}\n}\n","export default class OpenCageAPI {\n\tconstructor() {\n\t\tthis._getLocationData = this.debounce(() => this.processResults());\n\t\tthis._formattedData = null;\n\t\tthis.location = null;\n\t}\n\n\tget getLocationData() {\n\t\treturn this._getLocationData;\n\t}\n\n\tget formattedData() {\n\t\treturn this._formattedData;\n\t}\n\n\ttrimZIP(location) {\n\t\treturn location.replace(location.match(/ \\d+|\\d+ /), '') || location;\n\t}\n\n\tformatUSA(location, stateCode, countryCode, state) {\n\t\tif (countryCode === 'us' && location.includes(state)) {\n\t\t\treturn location.replace(state, stateCode);\n\t\t}\n\t\treturn location;\n\t}\n\n\tasync getLocation() {\n\t\ttry {\n\t\t\tconst locationResponse = await fetch(\n\t\t\t\t`https://api.opencagedata.com/geocode/v1/json?q=${this.location}&abbrv=1&address_only=1&key=785a8a07be864fe2871868ad991144c0`,\n\t\t\t);\n\t\t\treturn await locationResponse.json();\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tasync processResults() {\n\t\ttry {\n\t\t\tconst json = await this.getLocation();\n\t\t\tconst locationResults = json.results;\n\t\t\tif (locationResults.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._formattedData = locationResults.map((location, i) => {\n\t\t\t\tconst locationComponents = locationResults[i].components;\n\t\t\t\tconst ziplessLocation = this.trimZIP(location.formatted);\n\t\t\t\treturn this.formatUSA(\n\t\t\t\t\tziplessLocation,\n\t\t\t\t\tlocationComponents.state_code,\n\t\t\t\t\tlocationComponents.country_code,\n\t\t\t\t\tlocationComponents.state,\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn this._formattedData;\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tdebounce(processResults, timeout = 300) {\n\t\tlet timer = null;\n\t\treturn async location => {\n\t\t\tthis.location = location;\n\t\t\tclearTimeout(timer);\n\t\t\tconst locations = await new Promise(resolve => {\n\t\t\t\ttimer = setTimeout(async () => {\n\t\t\t\t\tresolve(await processResults());\n\t\t\t\t}, timeout);\n\t\t\t});\n\t\t\treturn locations;\n\t\t};\n\t}\n}\n","import OpenCageAPI from './OpenCage.js';\n\nexport default class Searchbar {\n\tconstructor() {\n\t\tthis.opencage = new OpenCageAPI();\n\t}\n\n\tasync handleSearch(e) {\n\t\tconst target = e.target;\n\t\tthis._currSearch = target.value;\n\t\treturn await this.opencage.getLocationData(this._currSearch);\n\t}\n}\n","import WeatherData from './modules/WeatherDataService.js';\nimport DomManager from './modules/DomManager.js';\nimport DomElementKeeper from './modules/DomElementKeeper.js';\nimport Searchbar from './modules/Seachbar.js';\nimport './style.css';\n\nclass App {\n\tconstructor() {\n\t\tthis.elementKeeper = new DomElementKeeper();\n\t\tthis.dom = new DomManager(this.elementKeeper);\n\t\tthis.weatherData = new WeatherData();\n\t\tthis.searchbar = new Searchbar(this.elementKeeper);\n\t\tthis.formClass = 'search-form';\n\t}\n\n\tasync requestDOMDataPopulation() {\n\t\tawait this.dom.populateData({\n\t\t\tcurrentConditions: this.weatherData.currentConditions,\n\t\t\tconditionDescription: this.weatherData.conditionDescription,\n\t\t\tminTemp: this.weatherData.minTemp,\n\t\t\tmaxTemp: this.weatherData.maxTemp,\n\t\t\tunit: this.weatherData.unit,\n\t\t\ttimezone: this.weatherData.timezone,\n\t\t\ttenDayForecast: this.weatherData.getDays(10),\n\t\t\tnextTwentyFourHours: this.weatherData.getNextTwentyFourHourData(),\n\t\t\tmeridiem: this.weatherData.getMeridiem(),\n\t\t\tcurrentHour: this.weatherData.getCurrentHour(),\n\t\t\ttimezone: this.weatherData.timezone,\n\t\t\tcurrentIcon: this.weatherData.currentIcon,\n\t\t\tstation: this.weatherData.nearestStation,\n\t\t});\n\t}\n\n\trequestDOMUnitConversion() {\n\t\tconst prevSIUnit = this.weatherData.unit;\n\t\tthis.weatherData.toggleUnitOfMeasurement();\n\t\tthis.dom.updateUnitsOfMeasurement({\n\t\t\tnextTwentyFourHours: this.weatherData.getNextTwentyFourHourTemps(),\n\t\t\tprevSIUnit: prevSIUnit,\n\t\t\tapiCallUnit: this.weatherData.apiCallUnit,\n\t\t\tminTemp: this.weatherData.minTemp,\n\t\t\tmaxTemp: this.weatherData.maxTemp,\n\t\t\tcurrentTemp: this.weatherData.currentTemp,\n\t\t\tfeelsLike: this.weatherData.feelsLike,\n\t\t\ttenDayLows: this.weatherData.getTenDayLows(),\n\t\t\ttenDayHighs: this.weatherData.getTenDayHighs(),\n\t\t});\n\t\tthis.dom.updateUnitConversionBtn();\n\t}\n\n\tcheckIfDataIsInvalid() {\n\t\tif (this.weatherData.validity === false) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync populateData() {\n\t\tawait this.weatherData.fetchWeatherData();\n\t\tif (this.checkIfDataIsInvalid()) return null;\n\n\t\tthis.dom.startBlinkAnimation();\n\t\tthis.dom.addAnimationConstrain();\n\t\tthis.dom.setSeachbarMetaData(this.weatherData.abbreviatedLocation);\n\t\tawait this.requestDOMDataPopulation();\n\t\tthis.dom.startRevealAnimations();\n\t}\n\n\tasync refreshData() {\n\t\tawait this.weatherData.fetchWeatherData();\n\t\tif (this.checkIfDataIsInvalid()) return;\n\t\tthis.requestDOMDataPopulation();\n\t}\n\n\tsearchNewLocation(e) {\n\t\te.preventDefault();\n\t\tconst focusedELement = document.activeElement;\n\t\t// prohibit form submition with enter key (user must explicitly select location)\n\t\tif (\n\t\t\t[...focusedELement.attributes].some(\n\t\t\t\tattr => attr.nodeName === 'type' && attr.nodeValue === 'search',\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prevLocation = this.weatherData.abbreviatedLocation;\n\t\tconst submitter = e.submitter;\n\t\tconst location = submitter.value;\n\t\tthis.dom.hideResults();\n\t\tthis.weatherData.setLocation(location);\n\t\tthis.populateData().then(returnVal => {\n\t\t\tif (returnVal === null) {\n\t\t\t\tthis.dom.showNoLocationErrorMsg(location);\n\t\t\t\tthis.dom.updateSearchbarValue(prevLocation);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync handleSearches(e) {\n\t\tconst serachbarValue = e.target.value;\n\t\tif (serachbarValue === '') {\n\t\t\tthis.dom.hideResults();\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchResults = await this.searchbar.handleSearch(e);\n\t\tif (!searchResults) {\n\t\t\tthis.dom.hideResults();\n\t\t\tthis.dom.showNoResults();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dom.hideResults();\n\t\tthis.dom.showLocationResults(searchResults);\n\t}\n\n\tinit() {\n\t\tthis.populateData();\n\t\tthis.elementKeeper.form.addEventListener('submit', e =>\n\t\t\tthis.searchNewLocation(e),\n\t\t);\n\t\tthis.elementKeeper.searchbar.addEventListener('keyup', e =>\n\t\t\tthis.handleSearches(e),\n\t\t);\n\t\tthis.elementKeeper.unitConversionBtn.addEventListener('click', () =>\n\t\t\tthis.requestDOMUnitConversion(),\n\t\t);\n\t\tsetInterval(() => this.refreshData(), 1800000); //30 minutes: https://www.visualcrossing.com/resources/documentation/weather-api/how-to-look-up-the-current-weather-conditions-in-the-weather-api/\n\t}\n}\n\nnew App().init();\n"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","m","getPrototypeOf","obj","value","mode","this","__esModule","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","d","definition","defineProperty","enumerable","get","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","type","target","head","appendChild","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","test","replace","p","installedChunks","j","installedChunkData","promise","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","findIndex","pattern","object","findKey","valueCallback","rest","slice","enUS","formatDistance","token","count","result","tokenValue","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInHour","constructFromSymbol","for","constructFrom","Date","constructor","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","in","setHours","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","find","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","a","dayPeriodEnumValue","h","H","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","console","warn","includes","warnOrThrowProtectedError","formatter","matched","tzIntlTimeZoneName","assign","dtf","timeZone","Intl","DateTimeFormat","timeZoneName","getDTF","formatted","formatToParts","partsTimeZone","tzNameMatch","exec","substr","hackyTimeZone","typeToPos","hour","minute","second","dtfCache","testDateFormatted","hourCycle","hourCycleSupported","fullYear","millisecond","setUTCHours","MILLISECONDS_IN_HOUR","patterns","timezone","timezoneZ","timezoneHH","timezoneHHMM","timezoneString","isUtcDate","absoluteOffset","validateTimezone","NaN","timeZoneString","validIANATimezoneCache","isValidTimezoneIANAString","now","toUtcDate","calcOffset","fixedOffset","utcGuess","o2","o3","max","fixOffset","tokens","hour12","getDateTimeFormat","filled","pos","partsOffset","parsed","hackyOffset","tzTokenizeDate","asUTC","asTS","over","getTimeZoneOffset","floor","timeZoneOffset","output","dateTimePattern","plainTime","YY","YYY","YYYY","YYYYY","MM","DDD","MMDD","Www","WwwD","HH","HHMM","HHMMSS","arguments","TypeError","additionalDigits","dateStrings","dateString","timeString","trim","splitDateString","restDateString","patternYYY","patternYYYYY","yearString","centuryString","parseYear","validateDate","isLeapYear","isLeapYearIndex","validateDayOfYearDate","validateWeekDate","dayOfISOWeekYear","parseDate","timestamp","parseFloat","validateTime","seconds","parseTime","isoWeekYear","getUTCDay","setUTCDate","getUTCDate","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","tzFormattingTokensRegExp","formatInTimeZone","matches","precededByQuotedSection","replaced","offsetMilliseconds","resultDate","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toZonedTime","WeatherData","TWELVE_HOURS","TWENTY_FOUR_HOURS","_apiCallUnit","_rawData","_abbreviatedLocation","_location","_valid","_baseURL","_apiKey","_units","metric","us","noStation","stationID","stationName","coords","abbreviateLocation","splitLocation","split","region","at","setLocation","newLocation","toggleUnitOfMeasurement","bools","Set","size","bool","entries","apiCallUnit","todaysWeatherData","days","hourlyData","weatherState","currentConditions","conditions","conditionDescription","description","minTemp","tempmin","maxTemp","tempmax","currentTemp","temp","feelsLike","feelslike","abbreviatedLocation","currentIcon","icon","validity","nearestStation","hasOwn","stations","distances","stationArray","distance","minDistance","min","apply","nearestStationIdx","rawData","state","getTenDayHighs","getDays","getTenDayLows","numOfDays","flatMap","getNextFortyEightHours","getNextTwentyFourHourData","getMerdiemAdjustedStartHour","getNextTwentyFourHourTemps","getMeridiem","getCurrentHour","fetchWeatherData","resp","fetch","ok","json","TimeKeeper","intervalID","currTime","prevTime","currHour","prevHour","parseHour","startTimeKeeper","callback","clearInterval","setInterval","CarouselHandler","carousel","hourCards","carouselWrapper","hourCardsArr","from","init","shiftCarouselBackward","cardWidth","numberOfCards","scrollLeft","scrollIntoView","block","shiftCarouselForward","carouselRightEdge","clientWidth","wholeNumber","handleCarouselDirectionClicks","closest","targetClasses","classList","carouselColGap","getComputedStyle","getPropertyValue","offsetWidth","directionMapping","backward","forward","direction","handler","contains","scrollToCurrentHour","addEventListener","NWS","_stationID","baseURL","_stationName","fetchStation","response","properties","parseISO","invalidDate","dateTimeDelimiter","timeZoneDelimiter","parseYearResult","regex","RegExp","captures","century","dateRegex","isWeekDate","parseDateUnit","_year","daysInMonths","timeRegex","parseTimeUnit","tmpDate","timezoneRegex","_hours","parseTimezone","DomManager","elememts","elementKeeper","nws","timeKeeper","getUnitString","setImgIcon","img","iconName","iconURL","default","alt","setSeachbarMetaData","searchbar","innerText","populateTenDayForecast","tenDayForecast","imgPromises","highs","textContent","datetime","lows","dailyPrecipChance","precipprob","imgPromise","dailyWeatherIcons","populateHourlyForecast","nextTwentyFourHours","meridiem","currentHour","nextTwentyFourHoursPrecipChance","times","hourlyTemps","hourlyPrecipitationChances","hourlyWeatherIcons","populateCircularReadout","circle","adjustedConicProgress","style","setProperty","add","remove","populateCurrentConditions","currentCondtionDict","condition","feelsLikeTemp","humidity","currHumidity","currentWeatherIcon","precipProb","precipitation","currTemp","uvindex","UVIndex","uvIndex","visibility","visibleDistance","weatherElement","forecastDescription","populateBottomLevelDecor","weatherStation","latitude","longitude","invalidStation","weatherStationCoords","weatherStationName","setHourlyForecast","weatherData","setTime","currentTime","processTime","timeData","populateData","station","removeAnimations","contentWrapper","loaderTop","loaderBottom","element","cls","startRevealAnimations","once","addAnimationConstrain","startBlinkAnimation","hideResults","searchResultElements","searchResult","noResults","updateSearchbarValue","showLocationResults","searchResults","searchResultContainer","showNoResults","showNoLocationErrorMsg","noWeatherDataLocation","nolocationModal","showModal","convertToCelsius","convertToFahrenheit","convertUnits","conversionMap","converstionMethod","val","updateUnitsOfMeasurement","temps","hoursArr","tenDayHighs","highsArr","high","tenDayLows","lowsArr","low","prevSIUnit","updateUnitConversionBtn","unitConversionBtn","dataset","handleSettingsClick","settingsWrapper","toggle","handleOutOfBoundsClick","composedPath","settingsBtn","closeModalBtn","close","DomElementKeeper","elements","elementsToQuery","selector","form","queryElements","selectors","selectorOptions","querySelector","querySelectorAll","OpenCageAPI","_getLocationData","debounce","processResults","_formattedData","getLocationData","formattedData","trimZIP","formatUSA","stateCode","countryCode","getLocation","locationResponse","err","log","locationResults","results","locationComponents","components","ziplessLocation","state_code","country_code","timer","async","Searchbar","opencage","handleSearch","_currSearch","dom","formClass","requestDOMDataPopulation","requestDOMUnitConversion","checkIfDataIsInvalid","refreshData","searchNewLocation","preventDefault","activeElement","attributes","attr","nodeName","nodeValue","prevLocation","submitter","returnVal","handleSearches"],"sourceRoot":""}